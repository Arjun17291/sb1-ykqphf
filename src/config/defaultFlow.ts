import { Node, Edge } from 'reactflow';
import { NodeData } from '../types/flow';

export const defaultNodes: Node<NodeData>[] = [
  {
    id: 'start',
    type: 'customNode',
    position: { x: 250, y: 0 },
    data: { type: 'input', label: 'Start' },
  },
  {
    id: 'select_request_type',
    type: 'customNode',
    position: { x: 250, y: 100 },
    data: { type: 'branch', label: 'Select Request Type' },
  },
  {
    id: 'order_related_flow',
    type: 'customNode',
    position: { x: 50, y: 200 },
    data: { type: 'tool', label: 'Fetch Orders' },
  },
  {
    id: 'check_orders',
    type: 'customNode',
    position: { x: 50, y: 300 },
    data: { type: 'branch', label: 'Check Orders' },
  },
  {
    id: 'display_orders',
    type: 'customNode',
    position: { x: -100, y: 400 },
    data: { type: 'tool', label: 'Display Orders' },
  },
  {
    id: 'ask_order_id',
    type: 'customNode',
    position: { x: 200, y: 400 },
    data: { type: 'input', label: 'Ask Order ID' },
  },
  {
    id: 'serve_order_request',
    type: 'customNode',
    position: { x: 50, y: 500 },
    data: { type: 'llm', label: 'Process Order Request' },
  },
  {
    id: 'refund_status',
    type: 'customNode',
    position: { x: 250, y: 200 },
    data: { type: 'tool', label: 'Check Refund Status' },
  },
  {
    id: 'complaint_status',
    type: 'customNode',
    position: { x: 450, y: 200 },
    data: { type: 'tool', label: 'Check Complaint Status' },
  },
  {
    id: 'address_update',
    type: 'customNode',
    position: { x: 650, y: 200 },
    data: { type: 'input', label: 'Update Address' },
  },
  {
    id: 'confirm_address_update',
    type: 'customNode',
    position: { x: 650, y: 300 },
    data: { type: 'branch', label: 'Confirm Update' },
  },
  {
    id: 'end',
    type: 'customNode',
    position: { x: 250, y: 600 },
    data: { type: 'output', label: 'End' },
  },
];

export const defaultEdges: Edge[] = [
  {
    id: 'e1',
    source: 'start',
    target: 'select_request_type',
    type: 'smoothstep',
    animated: true,
  },
  {
    id: 'e2',
    source: 'select_request_type',
    target: 'order_related_flow',
    type: 'smoothstep',
    animated: true,
  },
  {
    id: 'e3',
    source: 'select_request_type',
    target: 'refund_status',
    type: 'smoothstep',
    animated: true,
  },
  {
    id: 'e4',
    source: 'select_request_type',
    target: 'complaint_status',
    type: 'smoothstep',
    animated: true,
  },
  {
    id: 'e5',
    source: 'select_request_type',
    target: 'address_update',
    type: 'smoothstep',
    animated: true,
  },
  {
    id: 'e6',
    source: 'order_related_flow',
    target: 'check_orders',
    type: 'smoothstep',
    animated: true,
  },
  {
    id: 'e7',
    source: 'check_orders',
    target: 'display_orders',
    type: 'smoothstep',
    animated: true,
    label: 'Orders Found',
  },
  {
    id: 'e8',
    source: 'check_orders',
    target: 'ask_order_id',
    type: 'smoothstep',
    animated: true,
    label: 'No Orders',
  },
  {
    id: 'e9',
    source: 'display_orders',
    target: 'serve_order_request',
    type: 'smoothstep',
    animated: true,
  },
  {
    id: 'e10',
    source: 'ask_order_id',
    target: 'serve_order_request',
    type: 'smoothstep',
    animated: true,
  },
  {
    id: 'e11',
    source: 'serve_order_request',
    target: 'end',
    type: 'smoothstep',
    animated: true,
  },
  {
    id: 'e12',
    source: 'refund_status',
    target: 'end',
    type: 'smoothstep',
    animated: true,
  },
  {
    id: 'e13',
    source: 'complaint_status',
    target: 'end',
    type: 'smoothstep',
    animated: true,
  },
  {
    id: 'e14',
    source: 'address_update',
    target: 'confirm_address_update',
    type: 'smoothstep',
    animated: true,
  },
  {
    id: 'e15',
    source: 'confirm_address_update',
    target: 'end',
    type: 'smoothstep',
    animated: true,
  },
];